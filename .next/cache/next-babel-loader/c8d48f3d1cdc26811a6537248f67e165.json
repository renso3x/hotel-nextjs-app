{"ast":null,"code":"var _jsxFileName = \"/Users/romeoenso/Desktop/refluens/refluens-hotel-reservation/hotel-app/pages/profile.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport nextCookie from 'next-cookies';\nimport { withAuthSync } from '../utils/auth';\n\nconst Profile = props => {\n  const {\n    name,\n    login,\n    bio,\n    avatarUrl\n  } = props.data;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Welcome User!\"));\n};\n\nProfile.getInitialProps = async ctx => {\n  // We use `nextCookie` to get the cookie and pass the token to the\n  // frontend in the `props`.\n  const {\n    token\n  } = nextCookie(ctx);\n  const apiUrl = 'http://localhost:4000/me';\n\n  const redirectOnError = () => Router.push('/login');\n\n  try {\n    const response = await axios.get(apiUrl, {\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    });\n\n    if (response.data.token) {\n      return await response.json();\n    } else {\n      // https://github.com/developit/unfetch#caveats\n      return redirectOnError();\n    }\n  } catch (error) {\n    // Implementation or Network error\n    return redirectOnError();\n  }\n};\n\nexport default withAuthSync(Profile);","map":{"version":3,"sources":["/Users/romeoenso/Desktop/refluens/refluens-hotel-reservation/hotel-app/pages/profile.js"],"names":["React","Router","axios","nextCookie","withAuthSync","Profile","props","name","login","bio","avatarUrl","data","getInitialProps","ctx","token","apiUrl","redirectOnError","push","response","get","credentials","headers","Authorization","json","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,GAAf;AAAoBC,IAAAA;AAApB,MAAkCJ,KAAK,CAACK,IAA9C;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAKD,CARD;;AAUAN,OAAO,CAACO,eAAR,GAA0B,MAAMC,GAAN,IAAa;AACrC;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYX,UAAU,CAACU,GAAD,CAA5B;AAEA,QAAME,MAAM,GAAG,0BAAf;;AAEA,QAAMC,eAAe,GAAG,MAAMf,MAAM,CAACgB,IAAP,CAAY,QAAZ,CAA9B;;AAEA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAUJ,MAAV,EAAkB;AACvCK,MAAAA,WAAW,EAAE,SAD0B;AAEvCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAER;AAFR;AAF8B,KAAlB,CAAvB;;AAQA,QAAII,QAAQ,CAACP,IAAT,CAAcG,KAAlB,EAAyB;AACvB,aAAO,MAAMI,QAAQ,CAACK,IAAT,EAAb;AACD,KAFD,MAEO;AACL;AACA,aAAOP,eAAe,EAAtB;AACD;AACF,GAfD,CAeE,OAAOQ,KAAP,EAAc;AACd;AACA,WAAOR,eAAe,EAAtB;AACD;AACF,CA5BD;;AA8BA,eAAeZ,YAAY,CAACC,OAAD,CAA3B","sourcesContent":["import React from 'react'\nimport Router from 'next/router'\nimport axios from 'axios'\nimport nextCookie from 'next-cookies'\nimport { withAuthSync } from '../utils/auth'\n\nconst Profile = props => {\n  const { name, login, bio, avatarUrl } = props.data\n\n  return (\n    <div>\n      <h1>Welcome User!</h1>\n    </div>\n  )\n}\n\nProfile.getInitialProps = async ctx => {\n  // We use `nextCookie` to get the cookie and pass the token to the\n  // frontend in the `props`.\n  const { token } = nextCookie(ctx);\n\n  const apiUrl = 'http://localhost:4000/me';\n\n  const redirectOnError = () => Router.push('/login')\n\n  try {\n    const response = await axios.get(apiUrl, {\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n\n    if (response.data.token) {\n      return await response.json()\n    } else {\n      // https://github.com/developit/unfetch#caveats\n      return redirectOnError()\n    }\n  } catch (error) {\n    // Implementation or Network error\n    return redirectOnError()\n  }\n}\n\nexport default withAuthSync(Profile)"]},"metadata":{},"sourceType":"module"}