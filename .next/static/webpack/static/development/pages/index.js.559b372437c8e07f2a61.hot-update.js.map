{"version":3,"file":"static/webpack/static/development/pages/index.js.559b372437c8e07f2a61.hot-update.js","sources":["webpack:///./utils/auth.js"],"sourcesContent":["import { useEffect } from 'react'\nimport Router from 'next/router'\nimport nextCookie from 'next-cookies'\nimport cookie from 'js-cookie'\n\nexport const login = ({ token }) => {\n  cookie.set('token', token, { expires: 1 })\n  Router.push('/')\n}\n\nexport const auth = ctx => {\n  const { token } = nextCookie(ctx)\n  // If there's no token, it means the user is not logged in.\n  if (!token) {\n    if (typeof window === 'undefined') {\n      ctx.res.writeHead(302, { Location: '/login' })\n      ctx.res.end()\n    } else {\n      Router.push('/login')\n    }\n  }\n\n  return token\n}\n\nexport const logout = () => {\n  cookie.remove('token')\n  // to support logging out from all windows\n  window.localStorage.setItem('logout', Date.now())\n  Router.push('/login')\n}\n\nexport const withAuthSync = WrappedComponent => {\n  const Wrapper = props => {\n    const syncLogout = event => {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!')\n        Router.push('/login')\n      }\n    }\n\n    useEffect(() => {\n      window.addEventListener('storage', syncLogout)\n\n      return () => {\n        window.removeEventListener('storage', syncLogout)\n        window.localStorage.removeItem('logout')\n      }\n    }, [])\n\n    return <WrappedComponent {...props} />\n  }\n\n  Wrapper.getInitialProps = async ctx => {\n    const token = auth(ctx)\n\n    const componentProps =\n      WrappedComponent.getInitialProps &&\n      (await WrappedComponent.getInitialProps(ctx))\n\n    return { ...componentProps, token }\n  }\n\n  return Wrapper\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA,iBAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAHA;AAOA;AAPA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;;;;A","sourceRoot":""}